@{
    Layout = "_AdminPopupLayout";
}

@model CategoryMappingListModel
@inject AdminAreaSettings adminAreaSettings

@{
    if (ViewBag.RefreshPage == true)
    {
        <script type="text/javascript">
            try
            {
                var gridElement = window.opener.document.getElementById("@ViewBag.btnId");
                $(gridElement).click();
            }
            catch (e){}
            window.close();
        </script>

        return;
    }

    var popupGridPageSize = adminAreaSettings.PopupGridPageSize;

    //page title
    ViewBag.Title = T("Admin.Catalog.Categories.AddNew").Text;
}

<form method="post">
    <nop-antiforgery-token />

    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Catalog.Categories.AddNew")
        </h1>
        <div class="pull-right">
            &nbsp;
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search panel-search-popup panel-popup">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <div class="col-sm-4">
                                        <nop-label asp-for="SearchCategoryName" />
                                    </div>
                                    <div class="col-sm-8">
                                        <nop-editor asp-for="SearchCategoryName" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <div class="col-sm-4">
                                        <nop-label asp-for="SearchStoreId" />
                                    </div>
                                    <div class="col-sm-8">
                                        <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <button type="button" id="search-categories" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panel-default">
                    <div class="panel-body">

                        <div id="categories-grid"></div>

                        <script>
                            var selectedIds = [];
                            $(document).ready(function () {
                                $("#categories-grid").kendoGrid({
                                    dataSource: {
                                        type: "json",
                                        transport: {
                                            read: {
                                                url: "@Html.Raw(Url.Action("CategoryAddPopupList", "CategoryMappingsAdmin", new { entityId = Model.EntityId, entityType = Model.EntityType }))",
                                                type: "POST",
                                                dataType: "json",
                                                data: additionalData
                                            }
                                        },
                                        schema: {
                                            data: "Data",
                                            total: "Total",
                                            errors: "Errors"
                                        },
                                        error: function(e) {
                                            display_kendoui_grid_error(e);
                                            // Cancel the changes
                                            this.cancelChanges();
                                        },
                                        pageSize: @(popupGridPageSize),
                                        serverPaging: true,
                                        serverFiltering: true,
                                        serverSorting: true
                                    },
                                    pageable: {
                                        refresh: true
                                    },
                                    editable: {
                                        confirmation: false,
                                        mode: "inline"
                                    },
                                    scrollable: false,
                                    dataBound: onDataBound,
                                    columns: [{
                                        field: "CategoryId",
                                        headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                        headerAttributes: { style: "text-align:center" },
                                        template: "<input type='checkbox' name='SelectedCategoryIds' value='#=CategoryId#' #= Selected ? checked='checked' : '' # class='checkboxGroups' />",
                                        attributes: {
                                            style: "text-align:center"
                                        },
                                        width: 50
                                    }, {
                                        field: "CategoryName",
                                        title: "@T("Admin.Catalog.Categories.Fields.Name")"
                                    }, {
                                        field: "Published",
                                        title: "@T("Admin.Catalog.Categories.Fields.Published")",
                                        width: 100,
                                        headerAttributes: { style: "text-align:center" },
                                        attributes: { style: "text-align:center" },
                                        template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                    }]
                                });
                            });
                        </script>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#search-categories').click(function () {
                                    var grid = $('#categories-grid').data('kendoGrid');
                                    grid.dataSource.page(1); //new search. Set page size to 1
                                    grid.dataSource.read();
                                    return false;
                                });                                                              
                            
                                $('#mastercheckbox').click(function () {
                                    $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                                });

                                //wire up checkboxes.
                                $('#categories-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                                    var $check = $(this);
                                    if ($check.is(":checked") == true) {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked == -1) {
                                            //add id to selectedIds.
                                            selectedIds.push($check.val());
                                        }
                                    }
                                    else {
                                        var checked = jQuery.inArray($check.val(), selectedIds);
                                        if (checked > -1) {
                                            //remove id from selectedIds.
                                            selectedIds = $.grep(selectedIds, function (item, index) {
                                                return item != $check.val();
                                            });
                                        }
                                    }
                                    updateMasterCheckbox();
                                });
                            });

                            function updateMasterCheckbox() {
                                var numChkBoxes = $('#categories-grid input[type=checkbox][id!=mastercheckbox]').length;
                                var numChkBoxesChecked = $('#categories-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                                $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                            }

                            $("#@Html.IdFor(model => model.SearchCategoryName)").keydown(function (event) {
                                if (event.keyCode == 13) {
                                    $("#search-categories").click();
                                    return false;
                                }
                            });

                            function onDataBound(e) {
                                $('#categories-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                                    var currentId = $(this).val();
                                    var checked = jQuery.inArray(currentId, selectedIds);
                                    //set checked based on if current checkbox's value is in selectedIds.
                                    $(this).attr('checked', checked > -1);
                                });

                                updateMasterCheckbox();
                            }

                            function additionalData() {
                                var data = {
                                    SearchCategoryName: $('#@Html.IdFor(model => model.SearchCategoryName)').val(),
                                    SearchStoreId: $('#SearchStoreId').val()
                                };

                                addAntiForgeryToken(data);

                                return data;
                            }
                        </script>
                    </div>
                    <div class="panel-footer">
                        <button type="submit" name="save" class="btn bg-blue">
                            <i class="fa fa-floppy-o"></i>
                            @T("Admin.Common.Save")
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>