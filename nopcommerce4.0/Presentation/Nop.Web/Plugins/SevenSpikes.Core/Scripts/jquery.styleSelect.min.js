/*
 * 	 styleSelect - apply style to a select box
 *   (http://www.8stream.com/blog/entry/styleselect)
 *
 * 	 Copyright (c) 2010 Siim Sindonen, <siim@8stream.com>
 *   Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 * 
 *   Requires jQuery version: >= 1.3.2
 * 	 Version: 2.0.0 | 15.10.2010
 */

!function (e) { function t(t, s) { e("." + t).each(function () { var t = e(this).find(".styleSelect_item"); e(this).find("span").each(function () { var t = e(this).attr("class"); ("passiveSelect" == t || "activeSelect" == t) && e(this).remove() }); var i = e(this).find(".selected"); e("<span></span>").text(i.text()).attr("id", i.parent().attr("id")).addClass("passiveSelect").appendTo(e(this)), 0 === s && e(this).css({ width: t.width() }) }), e("." + t + " span").each(function () { e(this).attr("id") && (e(this).removeClass(), e(this).addClass("activeSelect")) }) } e.fn.styleSelect = function (s) { if (!sevenSpikesCore.isMobile()) { var i = 1, l = e.extend({}, e.fn.styleSelect.defaults, s); return e("input,select,textarea,button").each(function () { var t = e(this); t.attr("tabindex") || (t.attr("tabindex", i), i++) }), this.each(function () { mainSelect = e(this); var s = mainSelect.attr("name"), i = s.replace(/\[.*\]/, ""), n = mainSelect.attr("tabindex"), a = new Date, c = "selectbox_" + i + a.getTime(); mainSelect.hide(); var o = e('<div tabindex="' + n + '"></div>').css({ position: "relative", "z-index": parseInt(1e3 - n) }).addClass(l.styleClass).attr("id", c).insertBefore(mainSelect); e('<div class="styleSelect_item"></div>').appendTo(o).css({ position: "absolute", "z-index": "" + parseInt(500 - n), top: l.optionsTop, left: l.optionsLeft }).hide(), e('<div class="styleSelect_item_content"></div>').appendTo(e("#" + c + " .styleSelect_item")); var d = e("<ul></ul>").appendTo(e("#" + c + " .styleSelect_item_content")), r = ""; mainSelect.find("option").each(function () { r += '<li id="' + e(this).val() + '"', e(this).attr("class") && (r += ' class="' + e(this).attr("class") + '" '), r += ">", r += '<span style="display: block;"', e(this).attr("selected") && (r += ' class="selected" '), r += ">", r += e(this).text(), r += "</span>", r += "</li>" }), d.append(r), t(l.styleClass, l.optionsWidth), e("#" + c).click(function (t) { e(".styleSelect_item").hide(); var s = e(t.target); s.parents(".jspVerticalBar").attr("class") || e(this).find(".styleSelect_item").slideToggle(l.speed, function () { if ("none" != e(this).css("display") && 1 == l.jScrollPane) { e(this).find(".styleSelect_item_content").jScrollPane(l.jScrollPaneOptions); var t = e(".styleSelect_item_content").data("jsp"), s = e(".styleSelect_item_content").height(), i = e(".styleSelect_item_content .selected").position(); i.top && null != t && i.top > s ? t.scrollTo(0, parseInt(i.top - s / 2)) : i.top && i.top < s ? t.scrollTo(0, parseInt(i.top - s)) : null != t && t.scrollTo(0, 0) } }) }), e("#" + c + " li").click(function () { p(e(this)) }), e("#" + c).keydown(function (t) { var s = e(this).find(".selected").parent(); if (1 == l.jScrollPane) var i = e(".styleSelect_item_content").data("jsp"), n = e(".styleSelect_item_content").height(); if (40 == t.keyCode || 39 == t.keyCode) { var a = s.next(); if (a.index() > 0 && null != i && "none" != e("#" + c).find(".styleSelect_item").css("display")) { var o = a.position(); null != o.top && o.top > n && i.scrollTo(0, parseInt(o.top)) } p(a) } if (37 == t.keyCode || 38 == t.keyCode) { var d = s.prev(), r = d.index(); if (null != i && 1 == l.jScrollPane && "none" != e("#" + c).find(".styleSelect_item").css("display")) if (r > 0) { var f = d.position(); f.top - n < n && i.scrollTo(0, parseInt(f.top)) } else i.scrollTo(0, 0); p(d) } return 13 == t.keyCode || 0 == t.keyCode || 32 == t.keyCode ? (e(this).find(".styleSelect_item").slideToggle(l.speed, function () { var s = e(t.target); s.find(".jspContainer").attr("class") || 1 != l.jScrollPane || e(this).find(".styleSelect_item_content").jScrollPane(l.jScrollPaneOptions) }), !1) : void (9 == t.keyCode && e(this).find(".styleSelect_item").hide(l.speed)) }); var p = function (i) { i.siblings().find("span").removeClass("selected"), i.find("span").addClass("selected"); var n = i.attr("id"), a = e('select[name="' + s + '"]'); a.siblings().selected = !1, a.find('option[value="' + n + '"]').attr("selected", "selected"), a.trigger(l.selectTrigger), t(l.styleClass, l.optionsWidth) }, f = !1; e("#" + c).click(function (t) { f ? (e("#" + c + " .styleSelect_item").hide(), f = !1) : (t.stopPropagation(), f = !0) }), e(document).click(function () { e("#" + c + " .styleSelect_item").hide() }) }) } }, e.fn.styleSelect.defaults = { optionsTop: "26px", optionsLeft: "0px", optionsWidth: 0, styleClass: "selectMenu", speed: 0, selectTrigger: "change", jScrollPane: 0, jScrollPaneOptions: "" } }(jQuery);
