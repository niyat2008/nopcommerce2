@** Copyright 2017 Seven Spikes Ltd. All rights reserved. (http://www.nop-templates.com)
    * http://www.nop-templates.com/t/licensinginfo
*@

@inject NopAjaxCartSettings nopAjaxCartSettingsModel

@model SevenSpikes.Nop.Plugins.AjaxCart.Models.AjaxCartButtonsModel

@if (Model.AddProductToCartAjaxButtonModels.Count > 0)
{
    bool isThereAnyProductsWithAllowedQuantities = false;    

    for (var i = 0; i < Model.AddProductToCartAjaxButtonModels.Count; i++)
    {
        var button = Model.AddProductToCartAjaxButtonModels[i];

<div class="ajax-cart-button-wrapper" data-productid="@button.ProductId" data-isproductpage="@button.IsProductPage.ToString().ToLowerInvariant()">
    @if (button.IsProductPage)
    {
        <input type="button" id="add-to-cart-button-@button.ProductId" value="@button.ButtonValue" class="button-1 add-to-cart-button nopAjaxCartProductVariantAddToCartButton" data-productid="@button.ProductId" />
    }
    else
    {
        if (nopAjaxCartSettingsModel.EnableProductQuantityTextBox)
        {
            if (button.AllowedQuantities.Count > 0)
            {
                isThereAnyProductsWithAllowedQuantities = true;

                <select id="@string.Concat("productQuantity", button.ProductId)" class="productQuantityDropdown">
                    @foreach (var allowedQuantity in button.AllowedQuantities)
                    {
                        <option value="@allowedQuantity.Value">@allowedQuantity.Text</option>
                    }
                </select>
                <button></button>
                <input class="@string.Concat("productQuantityChanged", button.ProductId)" type="hidden" value="no" />
            }
            else
            {
                <input id="@string.Concat("productQuantity", button.ProductId)" type="text" class="productQuantityTextBox" value="@button.DefaultProductMinimumQuantity" />



                <span id="@(string.Concat("productQuantity", button.ProductId)+ "p")" class="k-plus">+</span>
                <span id="@(string.Concat("productQuantity", button.ProductId) + "m")" class="k-minus">-</span>

                <script type="text/javascript" asp-location="Footer">
                        $(document).ready(function() {
                           
                            $("#@(string.Concat("productQuantity", button.ProductId) + "m")").click(function (event) {

                                $("#@Html.IdFor(model => model.EnteredQuantity)").val(
                                    parseInt($("#@Html.IdFor(model => model.EnteredQuantity)").val()) + 1);
                                    //$("#add-to-cart-button-@Model.ProductId").click();
                                        return false;
                            });

                            $("#@(string.Concat("productQuantity", button.ProductId) + "m")").click(function (event) {
                                if (parseInt($("#@Html.IdFor(model => model.EnteredQuantity)").val()) > 0){
                                      $("#@Html.IdFor(model => model.EnteredQuantity)").val(
                                        parseInt($("#@Html.IdFor(model => model.EnteredQuantity)").val()) - 1);

                                    //$("#add-to-cart-button-@Model.ProductId").click();
                                    return false;
                                }
                            });

                        });
                </script>

                @*<input type="button" value="+" class="productQuantityTextBox" />
                    <input type="button" value="-" class="productQuantityTextBox" />*@
            }
        }

        <button type="button" class="button-2 product-box-add-to-cart-button nopAjaxCartProductListAddToCartButton" data-productid="@button.ProductId"><span>@button.ButtonValue</span></button>
    }


    @if (isThereAnyProductsWithAllowedQuantities && i == Model.AddProductToCartAjaxButtonModels.Count - 1)
    {
        <input type="hidden" class="ajaxCartAllowedQuantitesHover" data-productItemSelector="nopAjaxCartSettingsModel.ProductBoxProductItemElementSelector" />
    }
</div>
    }
}

<script type="text/javascript">
    //function incrementQuantityValue(event) {
    //    event.preventDefault();
    //    event.stopPropagation();

    //    var input = $(this).siblings('target goes here').first();

    //    var value = parseInt(input.val());
    //    if (isNaN(value)) {
    //        input.val(1);
    //        return;
    //    }

    //    value++;
    //    input.val(value);
    //}

    //function decrementQuantityValue(event) {
    //    event.preventDefault();
    //    event.stopPropagation();

    //    var input = $(this).siblings('target goes here').first();

    //    var value = parseInt(input.val());

    //    if (isNaN(value)) {
    //        input.val(1);
    //        return;
    //    }

    //    if (value <= 1) {
    //        return;
    //    }

    //    value--;
    //    input.val(value);
    //} 

    //$(document).ready(function () {
    //    $('#pppp').on('click', '.plus', incrementQuantityValue);
    //    $('#dddd').on('click', '.minus', decrementQuantityValue);
    //});
</script>