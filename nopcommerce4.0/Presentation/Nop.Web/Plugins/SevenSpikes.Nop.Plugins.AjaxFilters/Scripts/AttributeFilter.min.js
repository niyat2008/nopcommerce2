(function (n, t) { function i(i, r, u, f) { var e = {}; return e.CategoryId = i, e.ManufacturerId = r, e.VendorId = u, e.AttributeFilterGroups = [], n(".attributeFilterPanel7Spikes .filtersGroupPanel").each(function () { var r = n(this), u = parseInt(r.attr("data-optionsGroupId")) || 0, i = {}; i.Id = u; f != undefined && f.is(r) && (i.IsMain = !0, e.Priority = 1); i.FilterItems = []; r.find("[data-option-ids]").each(function () { var u = n(this), f = u.attr("data-option-ids"), e = u.attr("data-valueId"), o = f.split(","), r = {}; r.ValueId = e; r.ProductVariantAttributeIds = o; r.FilterItemState = t.getFilterItemStateBasedOnAttributes(u); i.FilterItems.push(r) }); e.AttributeFilterGroups.push(i) }), e } function r(i, r) { var u = r === "usedropdowns"; n(".attributeFilterPanel7Spikes .filtersGroupPanel").each(function () { var r = n(this), o = parseInt(r.attr("data-optionsGroupId")) || 0, e = n.grep(i.AttributeFilterGroups, function (n) { return n.Id === o }), f; e.length !== 0 && (f = u, r.find("[data-option-ids]").each(function () { var i = n(this), s = parseInt(i.attr("data-valueId")) || 0, r = n.grep(e[0].FilterItems, function (n) { return n.ValueId === s }), o; r.length !== 0 && (o = t.addStateClassAndAttributesToOption(i, r[0].FilterItemState, u), o && (f = !1)) }), f && r.find('[value="0"]').attr("selected", "selected")) }) } t.prototype.buildAttributeFiltersModel = i; t.prototype.refreshAttributeFilters = r; n(document).ready(function () { n(".attributeFilterPanel7Spikes").find('.attribute-options-select, .checkbox-list input[type="checkbox"]').on("change", function () { var i = n(this), r = i.closest("div[data-optionsgroupid]"), u = new t; u.requestProductsForSelectedFilters(r, i) }) }) })(jQuery, FiltersManager);