@using System.Linq;
@using System.Text
@using Nop.Core.Domain.Common;
@using Nop.Core.Infrastructure;

@model int?

@{
    var defaultGridPageSize = EngineContext.Current.Resolve<AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<AdminAreaSettings>().GridPageSizes;

    var productId = Model;

    if (productId == null)
    {
        @T("SevenSpikes.NopQuickTabs.Admin.NopProductsTabTitle.SaveBeforeEdit")
        return;
    }
}

<div class="content-header clearfix">
    <div class="pull-left">
        <input type="button" id="btnAddExistingProductAttachment" name="btnAddExistingProductAttachment"
               value="@T("SevenSpikes.NopQuickTabs.Admin.NopProductsTabTitle.AddExistingTab")"
               onclick="javascript:OpenWindow('@(Url.Action("AddExistingTabsPopup", "ProductTabAdmin", new { productId = productId, btnId = "btnRefreshGrid" }))', 800, 700, true); return false;"
               class="btn bg-blue" />

        <input type="button" id="btnAddNewProductAttachment" name="btnAddNewProductAttachment"
               value="@T("SevenSpikes.NopQuickTabs.Admin.NopProductsTabTitle.AddNewTab")"
               onclick="javascript:OpenWindow('@(Url.Action("Create", "TabAdmin", new { productId = productId, IsPopup = true }))', 1080, 700, true); return false;"
               class="btn bg-blue" />
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @T("SevenSpikes.NopQuickTabs.Admin.NopProductsTabTitle.ProductSpecificTabs")
                </div>
                <div class="panel-body">
                    <div id="product-specific-tabs-grid"></div>
                </div>
            </div>
        </div>
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @T("SevenSpikes.NopQuickTabs.Admin.NopProductsTabTitle.SharedTabs")
                </div>
                <div class="panel-body">
                    <div id="shared-tabs-grid"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@*Product Specific Tabs Grid*@
<script>
    $(document).ready(function () {
        $("#product-specific-tabs-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("ListProductSpecificTabs", "ProductTabAdmin", new { productId = productId }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    update:{
                        url: "@Html.Raw(Url.Action("UpdateTabs", "ProductTabAdmin", new { productId = productId }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    destroy:{
                        url: "@Html.Raw(Url.Action("DeleteProductSpecificTabs", "ProductTabAdmin", new { productId = productId }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, type: "number" },
                            SystemName: { editable: false, type: "string" },
                            DisplayName: { editable: false, type: "string" },
                            DisplayOrder: {editable: true, type: "number"}
                        }
                    }
                },
                requestEnd: function (e) {
                    if (e.type == "update") {
                        this.read();
                    }
                },
                error: function (e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            filterable: true,
            sortable: true,
            scrollable: false,
            columns: [{
                field: "SystemName",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.Tabs.Fields.SystemName")",
                template: "<a href='@Url.Content("~/Admin/TabAdmin/Edit/")#= Id #'>#= SystemName #</a>",
                width: 500
            }, {
                field: "DisplayName",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.Tabs.Fields.DisplayName")",
                width: 500
            },{
                field: "DisplayOrder",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.ProductTabs.Fields.DisplayOrder")",
                width: 500
            }, {
                command: [
                {
                    name: 'edit',
                    text: "@T("Admin.Common.Edit")"
                },
                {
                    name: "destroy",
                    text: "@T("Admin.Common.Delete")"
                }]
            }]
        });
    });
</script>

@*Shared Tabs Grid*@
<script>
    $(document).ready(function () {
        $("#shared-tabs-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("ListSharedTabs", "ProductTabAdmin", new { productId = productId }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                    update:{
                        url: "@Html.Raw(Url.Action("UpdateSharedTabs", "ProductTabAdmin", new { productId = productId }))",
                        type: "POST",
                        dataType: "json",
                        data: addAntiForgeryToken
                    },
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {
                            Id: { editable: false, type: "number" },
                            SystemName: { editable: false, type: "string" },
                            DisplayName: { editable: false, type: "string" },
                            DisplayOrder: { editable: true, type: "number" }
                        }
                    }
                },
                requestEnd: function(e) {
                    if (e.type == "update") {
                        this.read();
                    }
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            filterable: true,
            sortable: true,
            scrollable: false,
            columns: [
            {
                field: "SystemName",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.Tabs.Fields.SystemName")",
                template: "<a href='@Url.Content("~/Admin/TabAdmin/Edit/")#= Id #'>#= SystemName #</a>",
                width: 500
            }, {
                field: "DisplayName",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.Tabs.Fields.DisplayName")",
                width: 500
            }, {
                field: "DisplayOrder",
                title: "@T("SevenSpikes.NopQuickTabs.Admin.ProductTabs.Fields.DisplayOrder")",
                width: 500
            }, {
                command: [
                {
                    name: 'edit',
                    text: "@T("Admin.Common.Edit")"
                }]
            }]
        });
    });
</script>

@*Buttons*@
<input type="submit" id="btnRefreshGrid" name="btnRefreshGrid" style="display: none" />
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnRefreshGrid').click(function () {
            //refresh grid
            var optionsGrid = $("#product-specific-tabs-grid");
            optionsGrid.data('kendoGrid').dataSource.read();

            //return false to don't reload a page
            return false;
        });
    });
</script>