@{
    Layout = "_AdminPopupLayout";
}

@model AddRelatedBlogPostModel
@inject AdminAreaSettings adminAreaSettings
@{
    var defaultGridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;

    //page title
    ViewBag.Title = T("SevenSpikes.RichBlog.Admin.RelatedBlogPost.AddNew").Text;

    if (ViewBag.RefreshPage == true)
    {
        <script type="text/javascript">
            try {window.opener.document.getElementById("@ViewBag.btnId").click();}
            catch (e){}
            window.close();
        </script>
    }
}

<form method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("SevenSpikes.RichBlog.Admin.RelatedBlogPost.AddNew")
        </h1>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search-popup panel-popup">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <div class="col-sm-5">
                                        <nop-label asp-for="SearchBlogTitle" />
                                    </div>
                                    <div class="col-sm-7">
                                        <nop-editor asp-for="SearchBlogTitle" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <div class="col-sm-5">
                                        <nop-label asp-for="SearchStoreId" />
                                    </div>
                                    <div class="col-sm-7">
                                        <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <button type="button" id="search-blog-posts" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="blog-posts-grid"></div>
                    </div>
                    <div class="panel-footer">
                        <button type="submit" name="save" class="btn bg-blue">
                            <i class="fa fa-floppy-o"></i>
                            @T("Admin.Common.Save")
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    $(document).ready(function () {
        $("#blog-posts-grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "@Html.Raw(Url.Action("RelatedBlogPostsPopupList", "RelatedBlogPostAdmin", new { blogPostId = Model.BlogPostId }))",
                        type: "POST",
                        dataType: "json",
                        data: additionalData
                    }
                },
                schema: {
                    data: "Data",
                    total: "Total",
                    errors: "Errors",
                    model: {
                        id: "Id",
                        fields: {
                            Title: { editable: false, type: "string" },
                            LanguageName: { editable: false, type: "string" }
                        }
                    }
                },
                error: function(e) {
                    display_kendoui_grid_error(e);
                    // Cancel the changes
                    this.cancelChanges();
                },
                pageSize: @(defaultGridPageSize),
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true
            },
            pageable: {
                refresh: true,
                pageSizes: [@(gridPageSizes)]
            },
            editable: {
                confirmation: false,
                mode: "inline"
            },
            filtarable: false,
            sortable: false,
            scrollable: false,
            columns: [{
                field: "Id",
                title: "@T("Admin.Common.Check")",
                template: "<input type='checkbox' name='SelectedBlogPostIds' value='#=Id#' #= Selected ? checked='checked' : '' # />",
                attributes: {
                    style: "text-align:center"
                },
                width: 50
            }, {
                field: "Title",
                title: "@T("SevenSpikes.RichBlog.Admin.RelatedBlogPost.Title")"
            }, {
                field: "LanguageName",
                title: "@T("SevenSpikes.RichBlog.Admin.RelatedBlogPost.LanguageName")"
            }]
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#search-blog-posts').click(function () {
            var grid = $('#blog-posts-grid').data('kendoGrid');
            grid.dataSource.page(1); //new search. Set page size to 1
            grid.dataSource.read();
            return false;
        });
    });

    $("#@Html.IdFor(model => model.SearchBlogTitle)").keydown(function (event) {
        if (event.keyCode == 13) {
            $("#search-blog-posts").click();
            return false;
        }
    });

    function additionalData() {
        var data = {
            SearchBlogTitle: $('#@Html.IdFor(model => model.SearchBlogTitle)').val(),
            SearchStoreId: $('#SearchStoreId').val()
        };

        addAntiForgeryToken(data);

        return data;
    }
</script>