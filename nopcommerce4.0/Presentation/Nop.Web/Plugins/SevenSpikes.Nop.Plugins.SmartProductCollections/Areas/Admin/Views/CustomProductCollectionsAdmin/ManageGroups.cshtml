@model ProductCollectionsAdminModel
@inject AdminAreaSettings adminAreaSettings
@{
    Layout = AdminViewLocations.AdminLayoutViewPath;

    var gridPageSize = adminAreaSettings.DefaultGridPageSize;
    var gridPageSizes = adminAreaSettings.GridPageSizes;
    Html.SetActiveMenuItemSystemName("SevenSpikes.SmartProductCollections.Admin.Submenus.ManageGroups");
}

<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("SevenSpikes.SmartProductCollections.Admin.ProductGroup.ManageGroupsPageTitle")
    </h1>
    <div class="pull-right">
        <a href="@Html.Raw(Url.Action("CreateProductsGroup", "CustomProductCollectionsAdmin"))" class="btn bg-blue">@T("Admin.Common.AddNew")</a>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        @Html.TrialMessage(Model.IsTrialVersion, Plugin.Name, Plugin.UrlInStore)
        @if (Model.ProductGroups.Count > 0)
        {
            <nop-antiforgery-token />

            @* GROUPS GRID *@

            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div id="groups-grid"></div>
                    </div>
                </div>
            </div>

        }
        else
        {
            @T("SevenSpikes.SmartProductCollections.Admin.ProductGroup.NoGroupsMessage") <a href="@Html.Raw(Url.Action("CreateProductsGroup", "CustomProductCollectionsAdmin"))">@T("Admin.Common.AddNew")</a>
        }


        <script type="text/javascript">
            $(document).ready(function() {
                $("#groups-grid").kendoGrid({
                    dataSource: {
                        type: "json",
                        transport: {
                            read: {
                                url: "@Html.Raw(Url.Action("ListProductsGroups", "CustomProductCollectionsAdmin"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            },
                            destroy: {
                                url: "@Html.Raw(Url.Action("DeleteProductsGroup", "CustomProductCollectionsAdmin"))",
                                type: "POST",
                                dataType: "json",
                                data: addAntiForgeryToken
                            }
                        },
                        schema: {
                            data: "Data",
                            total: "Total",
                            errors: "Errors",
                            model: {
                                id: "Id",
                                fields: {
                                    Id: { editable: false, type: "number" },
                                    Title: { editable: false, type: "string" },
                                    WidgetZone: { editable: false, type: "string" },
                                    Published: { editable: true, type: "boolean" }
                                }
                            }
                        },
                        requestEnd: function(e) {
                            if (e.type == "update") {
                                this.read();
                            }
                        },
                        error: function(e) {
                            display_kendoui_grid_error(e);
                            // Cancel the changes
                            this.cancelChanges();
                        },
                        pageSize: @gridPageSize
                        },
                    pageable: {
                        refresh: true,
                        pageSizes: [@(gridPageSizes)]
                    },
                    editable: {
                        confirmation: true,
                        mode: "inline"
                    },
                    filterable: false,
                    sortable: true,
                    scrollable: false,
                    columns: [
                        {
                            field: "Title",
                            title: "@T("SevenSpikes.SmartProductCollections.Admin.ProductsGroup.Title")"
                        }, {
                            field: "WidgetZone",
                            title: "@T("SevenSpikes.SmartProductCollections.Admin.ProductsGroup.WidgetZone")"
                        }, {
                            field: "Published",
                            title: "@T("SevenSpikes.SmartProductCollections.Admin.ProductsGroup.Published")",
                            width: 100,
                            headerAttributes: { style: "text-align:center" },
                            attributes: { style: "text-align:center" },
                            template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                        }, {
                            title: "@T("Admin.Common.Edit")",
                            template: kendo.template($("#commands-template").html()),
                            filterable: false,
                            sortable: false,
                            width: 100
                        }, {
                            title: "@T("Admin.Common.Delete")",
                            command: [
                                {
                                    name: "destroy",
                                    text: "@T("Admin.Common.Delete")"
                                }
                            ],
                            width: 100
                        }
                    ]
                });
            });
        </script>

        <script id="commands-template" type="text/x-kendo-template">
            <a class="k-button" href="UpdateProductsGroup/#: Id#" title="@T("Admin.Common.Edit")">
                <span class="k-icon k-edit"></span>
                @T("Admin.Common.Edit")
            </a>
        </script>

    </div>
</div>