@inject IStoreContext storeContext
@inject ISettingService settingService

@{
    var storeId = storeContext.CurrentStore.Id;    
    var numberofSubCategories = settingService.GetSettingByKey("pavilionthemesettings.numberofsubcategories", 0, storeId, true);
}

@model Nop.Web.Models.Catalog.CategorySimpleModel

@if (Model.SubCategories.Count > 0)
{
    <div class="sub-category-details">
        <h2 class="inner-title">
            <a href="@Url.RouteUrl("Category", new {SeName = Model.SeName})" title="@Model.Name">@Model.Name</a>
        </h2>
        <ul class="sub-category-sublist">
            @foreach (var item in Model.SubCategories.Take(numberofSubCategories))
            {
                <li>
                    @if (item.NumberOfProducts.HasValue)
                    {
                        <a href="@Url.RouteUrl("Category", new {item.SeName})" title="@item.Name">@item.Name @T("Categories.TotalProducts", item.NumberOfProducts.Value)</a>
                    }
                    else
                    {
                        <a href="@Url.RouteUrl("Category", new {item.SeName})" title="@item.Name">@item.Name</a>
                    }
                </li>
            }

            @if (Model.SubCategories.Count > numberofSubCategories)
            {
                <li>
                    <a class="view-all" href="@Url.RouteUrl("Category", new {Model.SeName})" title="@Model.Name">
                        @T("SevenSpikes.Themes.Pavilion.Catalog.Subcategories.ViewAll")
                    </a>
                </li>
            }
        </ul>
    </div>
}