@model ProductDetailsModel.ProductBreadcrumbModel
@using Nop.Core.Domain.Common
@inject CommonSettings commonSettings
@{
    var breadcrumbDelimiter = commonSettings.BreadcrumbDelimiter;
}
@if (Model.Enabled)
{
<div class="breadcrumb-wrapper">
    <ol class="breadcrumb">
        @await Component.InvokeAsync("Widget", new { widgetZone = "productbreadcrumb_before", additionalData = Model.ProductId })
        <li>
            <span itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                <a href="@Url.RouteUrl("HomePage")" itemprop="url">
                    <span itemprop="title"><i class="fa fa-home"></i>@T("Products.Breadcrumb.Top")</span>
                </a>
            </span>
            @*<span class="divider">@breadcrumbDelimiter</span>*@
        </li>
        @foreach (var category in Model.CategoryBreadcrumb)
        {
            <li>
                <span itemscope itemtype="http://data-vocabulary.org/Breadcrumb">
                    <a href="@Url.RouteUrl("Category", new { SeName = category.SeName })" itemprop="url">
                        <span itemprop="title">@category.Name</span>
                    </a>
                </span>
                @*<span class="divider">@breadcrumbDelimiter</span>*@
            </li>
        }
        <li>
            <strong class="active">@Model.ProductName</strong>
            @*<strong class="current-item"><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" itemprop="url">@Model.ProductName</a></strong>*@
            @await Component.InvokeAsync("Widget", new { widgetZone = "productbreadcrumb_after", additionalData = Model.ProductId })
        </li>
    </ol>
</div>
} 