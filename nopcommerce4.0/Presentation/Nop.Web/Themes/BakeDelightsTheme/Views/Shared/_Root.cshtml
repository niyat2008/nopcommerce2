@{
    Layout = "_Root.Head";
}
@await Component.InvokeAsync("Widget", new { widgetZone = "body_start_html_tag_after" })
@await Html.PartialAsync("_Notifications")
<div class="master-wrapper-page">
        @await Html.PartialAsync("_JavaScriptDisabledWarning")
        @await Html.PartialAsync("_OldInternetExplorerWarning")
        <div class="admin-header-link">
            <ul>
                @await Component.InvokeAsync("AdminHeaderLinks")
            </ul>
        </div>    
        @await Html.PartialAsync("_Header")
        <script type="text/javascript" asp-location="Footer">
            AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart');
        </script>
        <div class="header-menu">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        @await Component.InvokeAsync("TopMenu")
                    </div>
                </div>
            </div>
        </div>
        <div class="master-wrapper-content">
            @await Component.InvokeAsync("Widget", new { widgetZone = "home_page_top" })
            @if (IsSectionDefined("Breadcrumb"))
            {
                @RenderSection("Breadcrumb")
            }
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                         @await Component.InvokeAsync("Widget", new { widgetZone = "content_before" })
                    </div>
                </div>
                @*ajax loading window*@
                <div class="ajax-loading-block-window" style="display: none">
                    <div class="loading-image">
                    </div>
                </div>
            </div>
            <div class="master-column-wrapper">
                <div class="container">
                    <div class="row">
                        @RenderBody()
                    </div>
                </div>
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = "content_after" })
        </div>
        @await Component.InvokeAsync("Footer")
        @* Use this content for back to top page scrolling *@
        <div id="backTop"></div>
</div>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = "body_end_html_tag_before" })

