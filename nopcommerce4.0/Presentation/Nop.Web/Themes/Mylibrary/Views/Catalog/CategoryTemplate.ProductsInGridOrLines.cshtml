@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@*category breadcrumb*@
@if (Model.DisplayCategoryBreadcrumb)
{
    <div>
        <!-- breadcrumbs start-->
        <div class="breadcrumb">
            <ul>
                <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a> <i class="fa fa-angle-right"></i></li>
                @foreach (var cat in Model.CategoryBreadcrumb)
                {
                    var isLastCategory = cat.Id == Model.Id;

                    if (isLastCategory)
                    {
                        <li class="active">@cat.Name</li>
                  
                    }
                    else
                    {
                        <li><a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a> <i class="fa fa-angle-right"></i></li>
                    }                 
                }             
            </ul>
        </div>
        <!-- breadcrumbs end-->
        <div class="category-image">
            <img class="list_banner_image" src="~/Themes/Mylibrary/Content/Library_img/banner/home-1/list-banner.png" alt="">
        </div>                               
       </div>

    @Html.Widget("categorydetails_after_breadcrumb")
    @Html.Widget("category_slider", Model.Id)
}

    <div>
    <div class="col-sm-12 col-lg-12 col-md-12">
        @Html.Widget("categorydetails_top")
        @Html.Widget("categorydetails_before_subcategories")
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
                <div class="banner-area">
                    <div class="row">
                     @foreach (var item in Model.SubCategories)
                     {
                            <div class="col-sm-4 col-lg-4 col-md-4">
                                <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                    @item.Name
                                </a>
                                <div class="single-banner">
                                    <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                        <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl"
                                             title="@item.PictureModel.Title" />
                                    </a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
    }
        @Html.Widget("categorydetails_before_featured_products")
        @*featured products*@
        @if (Model.FeaturedProducts.Count > 0)
    {
            <div class="product-grid home-page-product-grid">
                <div class="title mid-content-title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                    <span class="pull-right">
                        <a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="prev">
                            <i class="fa fa-angle-left"></i>
                        </a>
                        <a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="next">
                            <i class="fa fa-angle-right"></i>
                        </a>
                    </span>
                </div>
                <div id="carousel-example-generic-homepage-product" class="carousel slide" data-ride="carousel">
                    <!-- Indicators -->
                    <!-- Wrapper for slides -->
                    <div class="carousel-inner">
                        @{
        var ci = 0;
                        }
                        @foreach (var item in Model.FeaturedProducts)
                    {
                        if (ci == 0)
                        {
                            @:<div class="item active">
                                @:<div class="row box-products">
                            }
                        else if (ci % 4 == 0)
                        {
                            @:<div class="item">
                                @:<div class="row box-products">
                            }

                            <div class="col-md-6">
                                <div class="offer offer-default silde-show-offer pull-text-center">
                                    @Html.Partial("_ProductBox", item)
                                </div>
                            </div>


                        if (ci % 4 == 3)
                        {
                    @:</div>
                    @:</div>
                            }
                        ci++;
                    }
                        @if (ci % 4 == 0)
                    {
                    @:</div>
                    @:</div>
                        }

                    </div>
                </div>
            </div>


    }
        @Html.Widget("categorydetails_after_featured_products")
        <div class="row">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 list_or_grid">
                <div class="toolbar">
                    @*view mode*@
                    @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                {
					<div class="">
                        <div class="view-mode">
                            <ul>
                                @if (Model.PagingFilteringContext.AvailableViewModes.Count > 1)
                            {
                                var gridMode = Model.PagingFilteringContext.AvailableViewModes[0];
                                var listMode = Model.PagingFilteringContext.AvailableViewModes[1];

                                    <li><a class="@if(gridMode.Selected){<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text"><i class="fa fa-th-large"></i></a></li>
                                    <li><a class="@if (listMode.Selected){<text>selected</text>}" href="@listMode.Value" title="@listMode.Text"><i class="fa fa-th-list"></i></a></li>
                            }
                            </ul>
                        </div>
					</div>
                }
                @*sorting*@
				<div class="shortby_display">
                @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                {
					
						<div class="short-by">
							<span>@T("Catalog.OrderBy"):</span>
						</div>
						<div class="short-by">
						   @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
						</div>
					
                }
                @*page size*@
                @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                {
                    <div class="short-by page">
                        <span>@T("Catalog.PageSize"):</span>
                    </div>
                    <div class="short-by page">
                        @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                    </div>
					
                }
				</div>
				<div class="mob_pager">
					<div class="pager">
						@Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
					</div>
				</div>
            </div>
        </div>
    </div>

    @Html.Widget("categorydetails_before_filters")
    @section left
        {
        <div class="product-filters-wrapper">
            @*filtering*@
            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }
            @*filtering*@
            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>      
    }
    @Html.Widget("categorydetails_before_product_list")
    @*product list*@
    @if (Model.Products.Count > 0)
    {
        if (Model.PagingFilteringContext.ViewMode == "list")
        {
            foreach (var product in Model.Products)
                {
                <div class="row">
                    @Html.Partial("_ListProductBox", product)
                </div>
                }
        }
        else
        {
            @*grid mode*@
            <div class="product-grid home-page-product-grid">
                @{
            var pg_i = 0;
                }
                @foreach (var product in Model.Products)
                {
                    if (pg_i % 4 == 0)
                    {
                        @:<div class="row box-products">
                        }

                        <div class="col-lg-3 col-md-3 col-sm-6 col-xs-12">
                            <div class="offer offer-default silde-show-offer pull-text-center">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    if (pg_i % 4 == 3)
                    {
                @:</div>
                        }

                    pg_i++;
                }
                @if (pg_i % 4 != 0)
                {
    @:</div>
                        }
            </div>
        }
    }

        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="toolbar">
                    @*view mode*@
                    @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                    {
                        <div class="view-mode">
                            <ul>
                                @if (Model.PagingFilteringContext.AvailableViewModes.Count > 1)
                                {
                                    var gridMode = Model.PagingFilteringContext.AvailableViewModes[0];
                                    var listMode = Model.PagingFilteringContext.AvailableViewModes[1];

                                    <li><a class="@if(gridMode.Selected){<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text"><i class="fa fa-th-large"></i></a></li>
                                    <li><a class="@if (listMode.Selected){<text>selected</text>}" href="@listMode.Value" title="@listMode.Text"><i class="fa fa-th-list"></i></a></li>
                                }
                            </ul>
                        </div>
                    }
                    @*sorting*@
                    @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
                    {
                        <div class="short-by">
                            <span>@T("Catalog.OrderBy"):</span>
                        </div>
                        <div class="short-by">
                            @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                        </div>
                    }
                    @*page size*@
                    @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
                    {
                        <div class="short-by page">
                            <span>@T("Catalog.PageSize"):</span>
                        </div>
                        <div class="short-by page">
                            @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { @class = "form-control dropdown-filter", onchange = "setLocation(this.value);" })
                        </div>
                    }
                    <div class="pager mob_pager">
                        @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
                    </div>
                </div>
            </div>
        </div>
    @Html.Widget("categorydetails_bottom")
</div>


    
    

