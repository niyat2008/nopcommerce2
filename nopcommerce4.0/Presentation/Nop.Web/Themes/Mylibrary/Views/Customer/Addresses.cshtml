@model CustomerAddressListModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsTwoCustomer.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@section left
{
    @Html.Action("CustomerNavigation", "Customer", new { selectedTabId = CustomerNavigationEnum.Addresses })
}
<div class="customer_info_wrapper form-panel">
    <div class="area-title">
        <h2>@T("Account.MyAccount") - @T("Account.CustomerAddresses")</h2>
    </div>
    <div class="myaccount_address_wrapper">
        <div class="address-list">
            @if (Model.Addresses.Count > 0)
            {
                @Html.AntiForgeryToken()
                for (int i = 0; i < Model.Addresses.Count; i++)
                {
                    var address = Model.Addresses[i];

					<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">  
						<div class="section address-item">
							<div id="legend" class="footer-title">
								<h2><legend>@address.FirstName @address.LastName</legend></h2>
							</div>
							<ul class="info">
								<li class="name">
									@address.FirstName @address.LastName
								</li>
								<li class="email">
									@Html.LabelFor(model => model.Addresses[i].Email, new { }, ":")
									@address.Email
								</li>
								@if (address.PhoneEnabled)
								{
									<li class="phone">
										@Html.LabelFor(model => model.Addresses[i].PhoneNumber, new { }, ":")
										@address.PhoneNumber
									</li>
								}
								@if (address.FaxEnabled)
								{
									<li class="fax">
										@Html.LabelFor(model => model.Addresses[i].FaxNumber, new { }, ":")
										@address.FaxNumber
									</li>
								}
								@if (address.CompanyEnabled && !String.IsNullOrEmpty(address.Company))
								{
									<li class="company">@address.Company</li>
								}
								@if (address.StreetAddressEnabled)
								{
									<li class="address1">
										@address.Address1
									</li>
								}
								@if (address.StreetAddress2Enabled && !String.IsNullOrEmpty(address.Address2))
								{
									<li class="address2">
										@address.Address2
									</li>
								}
								@if (address.CityEnabled || address.StateProvinceEnabled || address.ZipPostalCodeEnabled)
								{
									<li class="city-state-zip">
										@if (address.CityEnabled)
										{
											@address.City
										}
										@if (address.CityEnabled && (address.StateProvinceEnabled || address.ZipPostalCodeEnabled))
										{
											<text>,</text>
										}
										@if (address.StateProvinceEnabled)
										{
											@address.StateProvinceName
										}
										@if (address.ZipPostalCodeEnabled)
										{
											@address.ZipPostalCode
										}
									</li>
								}
								@if (address.CountryEnabled && !String.IsNullOrEmpty(address.CountryName))
								{
									<li class="country">
										@address.CountryName
									</li>
								}
							</ul>
							<div class="buttons left address_edit_delete">
								<input type="button" class="button-2 edit-address-button btn btn-default" onclick="location.href='@(Url.RouteUrl("CustomerAddressEdit", new { addressId = address.Id }))'" value='@T("Common.Edit")' />
								<input type="button" class="button-2 delete-address-button btn btn-default" onclick="deletecustomeraddress(@(address.Id))" value="@T("Common.Delete")" />
							</div>
						</div> 
					</div> 
                <script type="text/javascript">
                    function deletecustomeraddress(addressId) {
                        if (confirm('@T("Admin.Common.AreYouSure")')) {
                            var postData = {
                                addressId: addressId
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: 'POST',
                                url: '@Url.Action("AddressDelete", "Customer")',
                                data: postData,
                                dataType: 'json',
                                success: function(data) {
                                    location.href = data.redirect;
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    alert('Failed to delete');
                                }
                            });
                        }
                    }
                </script>
                }
            }
            else
            {
                @T("Account.CustomerAddresses.NoAddresses")
            }
			
        </div>
        <div id="legend">
             <legend></legend>
        </div>
        
    </div>
	<div class="add-button">
		<input type="button" class="button-1 add-address-button btn btn-default" onclick="location.href='@Url.RouteUrl("CustomerAddressAdd")'" value="@T("Common.AddNew")" />
	</div>
</div>
