@model ProductEmailAFriendModel
@using Nop.Web.Models.Catalog;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(Model.ProductName);
    Html.AddTitleParts(T("PageTitle.ProductEmailAFriend").Text);
}
<div class="page email-a-friend-page">
    <div class="form-panel">
        <div class="area-title">
            <h2>@T("Products.EmailAFriend.Title")</h2>
        </div>
        <div class="myproduct_review_wrapper review_input">
            @if (Model.SuccessfullySent)
            {
                <div class="alert alert-success">
                    @Model.Result
                </div>
            }
            else
            {
                using (Html.BeginForm())
                {         
                       @Html.AntiForgeryToken()
                    <div class="title">
                        <h4><a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })" class="product">@Model.ProductName</a></h4>
                    </div>
                    <div class="text-danger">
                        @Html.ValidationSummary(true)
                    </div>
                    <div class="form-fields">
                        <div class="inputs-left">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.FriendEmail, new { @class = "col-lg-3 col-md-3 col-sm-3 col-xs-12 control-label" }, ":")
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.FriendEmail, new { @class = "form-control", placeholder = T("Wishlist.EmailAFriend.FriendEmail.Hint") })
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                    @Html.ValidationMessageFor(model => model.FriendEmail)
                                </div>
                            </div>                      
                            <div class="form-group row">
                                @Html.LabelFor(model => model.YourEmailAddress, new { @class = "col-lg-3 col-md-3 col-sm-3 col-xs-12 control-label" }, ":")
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "form-control", placeholder = T("Wishlist.EmailAFriend.YourEmailAddress.Hint") })
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                    @Html.ValidationMessageFor(model => model.YourEmailAddress)
                                </div>
                            </div>
                            @if (Model.DisplayCaptcha)
                            {
                                <div class="captcha-box">
                                    @Html.Raw(Html.GenerateCaptcha())
                                </div>
                            }
                        </div>
                        <div class="inputs-right">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.PersonalMessage, new { @class = "col-lg-3 col-md-3 col-sm-3 col-xs-12 control-label" }, ":")
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "form-control", placeholder = T("Wishlist.EmailAFriend.PersonalMessage.Hint"), rows ="7" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                                    @Html.ValidationMessageFor(model => model.PersonalMessage)
                                </div>
                            </div>
                        </div>
						<div class="inputs-right">
                            <div class="form-group row">
                                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12"></div>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="buttons">
										<input type="submit" name="send-email" class="button-1 btn btn-default write-product-review-button" value="@T("Products.EmailAFriend.Button")" />
									</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                }
            }
        </div>
    </div>
</div>

