@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;
@using System.Globalization

@helper Text_Truncate(string input, int length)
{
    if (input.Length <= length)
    {
        @input
    }
    else
    {
        @input.Substring(0, length)<text>...</text>
    }


}


@helper Price_Modifier(string input, int length)
{
    if (input.Length <= length)
    {
        @Html.Raw(@input)
    }
    else
    {
        @Html.Raw(@input.Substring(0, length))<text>...</text>
    }


}

@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}



<!-- single-grid-product-start -->
<div class="row">
    <div class="listing_product_wrapper" data-productid="@Model.Id">
        <div class="single-product">
            <div class="image-area">
                <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                    <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
                </a>
                @if (Model.MarkAsNew)
                {
                    <span class="new-box">
                        <span class="new-label">New</span>
                    </span>
                }
                @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo)
                {

                    if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <div class="price-box">
                            <span class="new-price">
                                @Model.ProductPrice.Price
                            </span>
                            <span class="old-price">
                                @Model.ProductPrice.OldPrice
                            </span>
                        </div>
                    }
                    if (Model.ProductPrice.DisplayTaxShippingInfo)
                    {
                        var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                        //of course, you can modify appropriate locales to include VAT info there
                        <div>
                            @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </div>
                    }

                }              
            </div>

            <div class="product-info">
                <h2 class="product-name">
                    <a href="@Url.RouteUrl("Product", new
				  {
					  SeName = Model.SeName
				  })">@Text_Truncate(Model.Name, 30)</a>
            </h2>
            <div class="price-box-area">
                @*@if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice) || Model.ProductPrice.DisplayTaxShippingInfo)
                {*@
                    <span class="new-price">
                        @Model.ProductPrice.Price
                    </span>
                @*}*@
            </div>

            @{
                int ratingPercent = 0;
                if (Model.ReviewOverviewModel.TotalReviews != 0)
                {
                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                }
            }
            @if (Model.ReviewOverviewModel.AllowCustomerReviews)
            {
                <div class="product-reviews-overview" @if (Model.ReviewOverviewModel.TotalReviews > 0) { <text> itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating" </text>       }>

                    <div class="ratings">
                        <div class="rating-box">
                            <div style="width: @(ratingPercent)%">
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="action-button-area">

                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    <input type="button" class="btn btn-default add-to-cart-button" value="@(Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink    ');return false;" />

                }
                <div class="wislist-view">
                    @if (!Model.ProductPrice.DisableAddToCompareListButton)
                    {
                        <input type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="btn btn-default add-to-wishlist-button" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" />
                    }
                    @*@if (!Model.ProductPrice.DisableWishlistButton)
                        {
                            <input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="btn btn-default add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" />
                        }*@
            </div>
        </div>
    </div>
        @Html.Widget("productbox_add_info")

    </div>
</div>
</div>
<!-- single-grid-product-end -->
