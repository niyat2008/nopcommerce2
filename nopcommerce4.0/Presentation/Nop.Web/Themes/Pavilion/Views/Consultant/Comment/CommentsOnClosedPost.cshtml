@using Nop.Web.Models.Consultant.Comment;
@model CommentOutputModel

<link href="~/css/Consultant/pagination.css" rel="stylesheet" />

<style>
    .comment {
        margin-bottom: 10px;
        background: #F5F5F5;
        border-radius: 4px;
        border: 1px solid #cee7bc
    }

        .comment .comment-Header {
            background: #e9e7e7;
            padding: 10px 15px;
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }

            .comment .comment-Header h3 {
                margin-top: 0;
                color: #555;
            }

                .comment .comment-Header h3 i {
                    font-size: 14px
                }

            .comment .comment-Header small {
                font-size: 13px
            }

        .comment .comment-Body {
            padding: 10px 15px
        }

            .comment .comment-Body p {
                font-size: 17px;
                color: #000;
            }
</style>

@foreach (var comment in Model.Items)
{
    <!-- Comments -->
    @Html.Partial("~/Themes/Pavilion/Views/Consultant/Comment/_CommentTemplatePartial.cshtml", comment)

}



@if (Model.Paging.PageNumber <= Model.Paging.TotalPages)
{


    @if (Model.Links.Count == 2)
    {
        @if (Model.Paging.PageNumber == 1)
        {
            <!-- Pager -->
            <nav class="pagination-outer" aria-label="Page navigation">
                <ul class="pagination">
                    <li class="page-item">
                        <a class="page- link btn btn-primary" aria-label="Next" onclick="getCommentPaging('@Model.Links[1]?.Href')">
                            <span aria-hidden="true"> <<< </span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page- link btn btn-primary">@Model.Paging.PageNumber</a>
                    </li>

                </ul>
            </nav>
        }
        else if (Model.Paging.PageNumber == Model.Paging.TotalPages)
        {
            <!-- Pager -->
            <nav class="pagination-outer" aria-label="Page navigation">
                <ul class="pagination">

                    <li class="page-item">
                        <a class="page- link btn btn-primary">@Model.Paging.PageNumber</a>
                    </li>
                    <li class="page-item">
                        <a class="page- link btn btn-primary" aria-label="Previous" onclick="getCommentPaging('@Model.Links[0]?.Href')">
                            <span aria-hidden="true"> >>> </span>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
    else if (Model.Links.Count > 2)
    {
        <!-- Pager -->
        <nav class="pagination-outer" aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page- link  btn btn-primary" aria-label="Previous" onclick="getCommentPaging('@Model.Links[0]?.Href')">
                        <span aria-hidden="true"> <<< </span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page- link btn btn-primary">@Model.Paging.PageNumber</a>
                </li>   

                <li class="page-item">
                    <a class="page- link btn btn-primary" aria-label="Next" onclick="getCommentPaging('@Model.Links[2]?.Href')">
                        <span aria-hidden="true"> >>> </span>
                    </a>
                </li>
            </ul>
        </nav>
    }
}


<script type="text/javascript">

    function getCommentPaging(url) {

        var indexmyurl = url.indexOf("Consultations/Consultations");
        var myurl = url.substring(indexmyurl);

        $.ajax({
            type: 'GET',
            url: myurl,

            success: function (data) {
                $("#comments").html(data);
            }
        });
    }

    function findAllFunctionsLinks(str, id) {
        var parent = $('#' + id);
        var urlRegex = /(https?:\/\/[^\s]+)/g;
        var m;

        do {
            m = urlRegex.exec(str);
            if (m) {
                getLinkPreview(m[1], parent);

            }
        } while (m);
        //return text.f(urlRegex, function (url) {
        //    return '<a href="' + url + '">' + url + '</a>';
        //});

    }

    function getLinkPreview(url, parent) {
        console.log('http://api.linkpreview.net/?key=5cac6f7021f07e9f21860314b820e1214f9ab4fa63335&q=' + url + ' From Url');
        $.ajax({
            type: 'GET',
            headers: {
                'Access-Control-Allow-Origin': '*'
            },
            url: url,
            success: function (data) {
                alert(JSON.stringify(data));
                parent.append(data);
            }, error: function (data) {
                parent.append(data);
            }
        });
    }
</script>