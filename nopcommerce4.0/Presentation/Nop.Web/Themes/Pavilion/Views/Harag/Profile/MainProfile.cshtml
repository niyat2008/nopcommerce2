@model Nop.Web.Models.Harag.Profile.ProfileModel

@{
    Layout = "~/Themes/Pavilion/Views/Harag/Shared/_Header.cshtml";
}


<style>
    .followed:hover {
        border: solid #ecd6d6 4px;
        background: red;
        color: white;
    }

    .followed {
        border: solid #ecd6d6 4px !important;
        background: red !important;
        color: white !important;
    }
</style>

<!-- Content -->
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                <div class="profile_info">
                    <p><i class="fa fa-user-o"></i> @Model.UserName</p>
                    <hr />
                    <p> @Model.LastSeen </p>
                    <hr />
                    @*<p><a href="add-message.html"><i class="fa fa-envelope-o"></i> مراسلة </a></p>*@
                    <hr />
                    <p><a href="/Harag/User/@Model.UserName/Rates">مشاهدة كل التقييمات</a></p>
                    <div class="col-xs-12" style="padding:0">
                        <a href="/Harag/User/@Model.UserName/Rates" class="btn btn-default add"> <i class="fa fa-thumbs-o-up"></i> <span> @Model.UpRating </span> تقييم ايجابى</a>
                        <a href="/Harag/User/@Model.UserName/Rates" class="btn btn-default add"> <i class="fa fa-thumbs-o-down" style="color:#d03333"></i> <span> @Model.DownRating </span> تقييم سلبى</a>
                    </div>
                    <hr />
                    @if (!ViewBag.SameUser && ViewBag.CanRateOtherUsers)
                        {
                            <p><a href="/Harag/Rate/@Model.UserName"> <i class="fa fa-thumbs-o-up"></i> اضافة تقييم </a></p>
                        }

                    <hr />
                    <p><i class="fa fa-user-o"></i> <span> @Model.FollowerCount </span> متابع </p>
                    <hr />
                        @if (!ViewBag.SameUser)
                        {
                            <button id="follow-user-js" class="btn btn-default add full" type="button"> متابعة >>  </button>
                        } 
                </div>
            </div>
            <div class="col-md-9">
                <div id="posts" class="items">

                    @foreach (var item in Model.Posts)
                    {
                        <div class="item">
                            <div class="det">
                                <a href="/Harag/Post/@item.Id">
                                    <h3>@item.Title</h3>
                                </a>
                                <small>@item.DateDescription</small>
                                <div class="det-det">
                                    <a href="/Harag/City/@item.City">
                                        <span><i class="fa fa-map-marker"></i> @item.City </span>
                                    </a>
                                    <a href="/Harag/user/@item.PostOwner">
                                        <span><i class="fa fa-user"></i> @item.PostOwner </span>
                                    </a>
                                </div>
                            </div>
                            <div class="det-img">
                                @if (!String.IsNullOrEmpty(item.Photo))
                                {
                                    <img src="/HaragApi/Uploads/Images/@item.Photo">
                                }
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>


<!-- Replace the value of the key parameter with your own API key. -->
<script>


    @*$.ajax({
            type: 'GET',
        url: '/Harag/@Model.userId/Posts',
            complete: function (data) {
                $("#posts").html(data.responseText);
            }
    });*@


    $(document).ready(function () {

        var map, Lat=0, Len=0;

        function initialize() {
            var mapOptions = {
                zoom: 12
            };
            map = new google.maps.Map(document.getElementById('map'),
                mapOptions);

            // Get GEOLOCATION
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = new google.maps.LatLng(position.coords.latitude,
                        position.coords.longitude);

                    map.setCenter(pos);
                    marker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        draggable: true
                    });

                    alert(JSON.stringify(pos));

                }, function () {
                    handleNoGeolocation(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            }

            function handleNoGeolocation(errorFlag) {
                if (errorFlag) {
                    var content = 'Error: The Geolocation service failed.';
                } else {
                    var content = 'Error: Your browser doesn\'t support geolocation.';
                }

                var options = {
                    map: map,
                    position: new google.maps.LatLng(60, 105),
                    content: content
                };

                map.setCenter(options.position);
                marker = new google.maps.Marker({
                    position: options.position,
                    map: map,
                    draggable: true
                });


            }

            // get places auto-complete when user type in location-text-box
            //var input = /** type {HTMLInputElement} */
            //    (
            //        document.getElementById('City-js-ajax'));


            //var autocomplete = new google.maps.places.Autocomplete(input);
            //autocomplete.bindTo('bounds', map);

            //var infowindow = new google.maps.InfoWindow();
            //marker = new google.maps.Marker({
            //    map: map,
            //    anchorPoint: new google.maps.Point(0, -29),
            //    draggable: true
            //});

            //google.maps.event.addListener(autocomplete, 'place_changed', function () {
            //    infowindow.close();
            //    marker.setVisible(false);
            //    var place = autocomplete.getPlace();
            //    if (!place.geometry) {
            //        return;
            //    }

            //    // If the place has a geometry, then present it on a map.
            //    if (place.geometry.viewport) {
            //        map.fitBounds(place.geometry.viewport);
            //    } else {
            //        map.setCenter(place.geometry.location);
            //        map.setZoom(17); // Why 17? Because it looks good.
            //    }
            //    marker.setIcon( /* @@type {google.maps.Icon} */({
            //        url: place.icon,
            //        size: new google.maps.Size(71, 71),
            //        origin: new google.maps.Point(0, 0),
            //        anchor: new google.maps.Point(17, 34),
            //        scaledSize: new google.maps.Size(35, 35)
            //    }));
            //    marker.setPosition(place.geometry.location);
            //    marker.setVisible(true);

            //    var address = '';
            //    if (place.address_components) {
            //        address = [
            //            (place.address_components[0] && place.address_components[0].short_name || ''), (place.address_components[1] && place.address_components[1].short_name || ''), (place.address_components[2] && place.address_components[2].short_name || '')
            //        ].join(' ');
            //    }

            //});



        }
        initialize();

        $("#City-js-ajax").change(function () {
            geocoder = new google.maps.Geocoder();
            var address = $("#City-js-ajax option:selected").text();
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    //  alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        });
        console.log(map);



    $("#add-update-location-js").click(function (event) {
        var lat = marker.getPosition().lat();
        var lng = marker.getPosition().lng();

        var postLocationModel = {
            PostId: '@Model.Id',
            Lat: lat,
            Lng: lng
        };

        alert(JSON.stringify(postLocationModel));
        // update the location
        $.ajax({
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        type: 'POST',
        url: '@Url.RouteUrl("Harag.Post.UpdatePostLocationAjax")',
        dataType: 'json',
            data: JSON.stringify(postLocationModel),
        complete: function (data) {
            if (data.satat == true) {
                window.location = '@Url.RouteUrl("Harag.Post.GetHaragPost")' + "?postId=" + data;
            } else {
                alert("تاكد من الاتصال بالانترنت وعاود المحاوله");
            }
        }
    });
        });


    });



</script>

<script type="text/javascript">
    $("#follow-user-js").click(function () {
        $.ajax({
            type: 'GET',
            url: '/Harag/Follow/User/@Model.userId',
            success: function (data) {
                if (data.status === true) {
                    if (data.added == true) {
                        $("#follow-user-js").addClass("followed");
                        $("#follow-user-js").html("الغاء المتابعه"); 
                    } else {
                        $("#follow-user-js").removeClass("followed");
                        $("#follow-user-js").html("متابعه");
                    } 
                } else {
                    alert("تاكد من الاتصال بالانترنت");
                }



            }
        });
    });
    function getPostPaging(url) {

        var indexmyurl = url.indexOf("Consultations/Consultations");
        var myurl = url.substring(indexmyurl);
        window.location.href = myurl;

    }

       $.ajax({
            type: 'GET',
            url: '@Url.RouteUrl("Harag.Post.GetHaragCities")',
            complete: function (data) {
                $("#City-js-ajax").html(data.responseText);
            }
    });
     $.ajax({
            type: 'GET',
            url: '@Url.RouteUrl("Harag.Post.GetHaragNeighborhoods")',
            complete: function (data) {
                $("#Neighbohood-js-ajax").html(data.responseText);
            }
    });



</script>
