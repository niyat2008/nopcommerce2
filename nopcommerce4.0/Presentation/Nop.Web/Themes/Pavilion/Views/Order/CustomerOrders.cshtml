@using Nop.Core.Domain.Shipping
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Payments

@model CustomerOrderListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-order-list-page");
}
@section left
    {
    @await Component.InvokeAsync("CustomerNavigation", new { selectedTabId = CustomerNavigationEnum.Orders })
}
<div class="page account-page order-list-page">
    <div class="page-title">
        <h1>@T("Account.MyAccount") - @T("Account.CustomerOrders")</h1>
    </div>
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {
            <div class="section recurring-payments">
                <div class="title">
                    <strong>@T("Account.CustomerOrders.RecurringOrders")</strong>
                </div>
                <form asp-route="CustomerOrders" method="post">
                    @{
                        var canRetryRecurringOrders = Model.RecurringOrders.Any(recurring => recurring.CanRetryLastPayment);
                    }
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                <col />
                                @if (canRetryRecurringOrders)
                                {
                                    <col />}
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th>
                                        <span class="item-count">#</span>
                                    </th>
                                    <th class="start-date" data-hide="w410, w480, w580">
                                        @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                    </th>
                                    <th class="cycle-info" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                    </th>
                                    <th class="next-payment">
                                        @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                    </th>
                                    <th class="total-cycles" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                    </th>
                                    <th class="cycles-remaining" data-hide="w410, w480, w580, w768, w980">
                                        @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                    </th>
                                    <th class="initial-order" data-hide="w410, w480, w580, w768">
                                        @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                    </th>
                                    @if (canRetryRecurringOrders)
                                    {
                                        <th class="retry">
                                            @T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")
                                        </th>
                                    }
                                    <th class="cancel" data-hide="w410">
                                        @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{var counter = 0;}
                                @foreach (var item in Model.RecurringOrders)
                                {
                                    counter++;
                                    <tr>
                                        <td>
                                            <span class="item-count">@counter</span>
                                        </td>
                                        <td class="start-date">
                                            @item.StartDate
                                        </td>
                                        <td class="cycle-info">
                                            @item.CycleInfo
                                        </td>
                                        <td class="next-payment">
                                            @item.NextPayment
                                        </td>
                                        <td class="total-cycles">
                                            @item.TotalCycles
                                        </td>
                                        <td class="cycles-remaining">
                                            @item.CyclesRemaining
                                        </td>
                                        <td class="initial-order">
                                            <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.InitialOrderId })">@string.Format(T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderNumber)</a>
                                        </td>
                                        @if (canRetryRecurringOrders)
                                        {
                                            <td class="retry">
                                                @if (item.CanRetryLastPayment)
                                                {
                                                    <input type="submit" name="retryLastPayment_@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.RetryLastPayment")" class="button-2 retry-recurring-order-button" />
                                                }
                                            </td>
                                        }
                                        <td class="cancel">
                                            @if (item.CanCancel)
                                            {
                                                <input type="submit" name="cancelRecurringPayment@(item.Id)" value="@T("Account.CustomerOrders.RecurringOrders.Cancel")" class="button-2 cancel-recurring-order-button" />
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </form>
            </div>
            if (Model.RecurringPaymentErrors.Any())
            {
                <div class="message-error">
                    <ul>
                        @foreach (var error in Model.RecurringPaymentErrors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div>
            }
        }


        @if (Model.Orders.Count > 0)
        {
            //amsfci
            <div class="order-list">
                @foreach (var order in Model.Orders)
                {
                    int status = 0;
                    bool cod = (order.PaymentMethod == "Payments.CashOnDelivery");
                    bool Paid = order.PaymentStatusEnum == PaymentStatus.Paid;
                    bool Delivered = order.ShippingStatusEnum == ShippingStatus.Delivered;
                    bool Shipped = order.ShippingStatusEnum == ShippingStatus.Shipped;

                    if (order.OrderStatusEnum == Nop.Core.Domain.Orders.OrderStatus.Pending
                        && (!Paid || !cod) && !Shipped && !Delivered)
                    {
                        status = 1;
                    }
                    else if (order.OrderStatusEnum == OrderStatus.Processing && (Paid || cod) && !Shipped && !Delivered) {
                        status = 2;
                    }
                    else if ((Paid || cod) && Shipped)
                    {
                        status = 3;
                    }
                    else if ((Paid || cod) && Delivered)
                    {
                        status = 4;
                    }
                <div class="section order-item" style="padding-top:60px!important;">
                    <div class="title">
                        <strong>@T("Account.CustomerOrders.OrderNumber"): @order.CustomOrderNumber</strong>
                    </div> @*@order.ShippingStatusEnum  @order.PaymentStatusEnum @order.PaymentMethod*@
                    @*right: 290px*@
                   
                    <ul style="position: absolute; top: -6px!important; ">
                        @*<li class="li @(status == 1?" active":"")"> قيد الانتظار</li>
        <li class="li @(status == 2 ?" active":"")">تم التاكيد</li>
        <li class="li  @( status == 3?" active":"")">تم الشحن</li>
        <li class="li  @(status ==4?" active":"")"> تم الاستلام </li>*@
                        @{
                            var none = status != 1 && status != 2 && status != 3 && status != 4;

                            var image = "background-color: green; background-image:  url('https://png2.kisspng.com/sh/b17667336e444eeded5ff370eeb4f031/L0KzQYm3VMIyN5d1fZH0aYP2gLBuTfNwdaF6jNd7LXnmf7B6TfNpbZRwRd9qcnuwgrFCgfx1gV5ritduLYT1hba0jCIubpJxi9c2NXHncoXohMg5OWY9Sqk3OUO7Roa7VMcyPWM5S6Q5OUi3RYOCWL5xdpg=/kisspng-computer-icons-check-mark-royalty-free-true-or-false-5adb4ad8815827.9386544715243209845298.png');     background-size: cover;";
                        }

                        <li style="@(status == 1 || status == 2 || status == 3 || status == 4 || none ? image : "background-color: gray;")" class="li  ">  <span> قيد الانتظار</span> </li>
                        
                        <li style="@((status == 2 || status == 3 || status == 4 || none) ? image : "background-color: gray;")" class="li "><span>تم التاكيد</span>  </li>
                        <li style="@((status == 3 || status == 4 || none)                           ? image : "background-color: gray;")" class="li  "><span>تم الشحن</span>  </li>
                        <li style="@((status == 4  || none)                                          ? image : "background-color: gray;")" class="li  )"> <span>تم الاستلام</span>   </li>
                    </ul>
                   

                    <link href="/Themes/Pavilion/Content/css/ShippingPhases.css" rel="stylesheet" type="text/css" />

                    @*<style type="text/css">

                        li.li {
                            width: 3em;
                            height: 3em;
                            text-align: center;
                            line-height: 3em;
                            border-radius: 10em;
                            background: green;
                            margin: 1em;
                            display: inline-block;
                            color: white;
                            position: relative;
                        }
                      

                            li.li::before {
                                content: '';
                                position: absolute;
                                top: 2.1em;
                                left: -4em;
                                width: 4em;
                                height: .7em;
                                background: dodgerblue;
                                z-index: -1;
                            }



                            li.li:first-child::before {
                                display: none;
                            }

                        .active {
                            background: dodgerblue;
                        }

                            .active ~ li.li {
                                background: lightblue;
                            }

                                .active ~ li.li::before {
                                    background: lightblue;
                                }

                        body {
                            font-family: sans-serif;
                        }
                    </style>*@


                    <ul class="info">
                        <li>@T("Account.CustomerOrders.OrderStatus"): <span class="order-status @order.OrderStatusEnum.ToString().ToLowerInvariant()">@order.OrderStatus</span></li>
                        <li>@T("Account.CustomerOrders.OrderDate"): <span class="order-date">@order.CreatedOn.ToString()</span></li>
                        <li>@T("Account.CustomerOrders.OrderTotal"): <span class="order-total">@order.OrderTotal</span></li>
                    </ul>


                    <div class="buttons">
                        @if (order.IsReturnRequestAllowed)
                        {
                            <input type="button" value="@T("Account.CustomerOrders.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest", new { orderId = order.Id })')" />
                        }
                        <input type="button" value="@T("Account.CustomerOrders.OrderDetails")" class="button-2 order-details-button" onclick="setLocation('@Url.RouteUrl("OrderDetails", new { orderId = order.Id })')" />
                    </div>
                </div>
                }
            </div>
        }
        else
        {
            <div class="no-data">
                @T("Account.CustomerOrders.NoOrders")
            </div>
        }
    </div>
</div>
