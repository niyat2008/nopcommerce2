@model ShoppingCartModel

@using Nop.Core
@using Nop.Core.Domain.Tax

@inject IWebHelper webHelper
@inject IWorkContext workContext

@*<link href="/Themes/Pavilion/Content/css/mobile-only.rtl.css" type="text/css" rel="stylesheet" />*@
<div class="">

    <div class="order-summary-content">
        @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_content_before" })
        @await Html.PartialAsync("_OrderReviewData", Model.OrderReviewData)
        @if (Model.Items.Count > 0)
        {
            if (Model.Warnings.Count > 0)
            {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
            }
            @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
                <form asp-route="ShoppingCart" method="post" enctype="multipart/form-data" id="shopping-cart-form">
                    <div class="table-wrapper">
                        <table class="cart">
                            <colgroup>
                                <col width="1" />
                                @if (Model.IsEditable)
                                {
                                    <col width="1" />
                                }
                                @if (Model.ShowSku)
                                {
                                    <col width="1" />
                                }
                                @if (Model.ShowProductImages)
                                {
                                    <col width="1" />
                                }
                                <col />
                                <col width="1" />
                                <col width="1" />
                                <col width="1" />
                            </colgroup>
                            <thead>
                                <tr class="cart-header-row">
                                    <th>
                                        <span class="item-count">#</span>
                                    </th>
                                    @if (Model.IsEditable)
                                    {
                                        <th class="remove-from-cart" data-hide="w410, w480, w580">
                                            @T("ShoppingCart.Remove")
                                        </th>
                                    }
                                    <th class="product" data-hide="w410, w480">
                                        @T("ShoppingCart.Product(s)")
                                    </th>
                                    @if (Model.ShowProductImages)
                                    {
                                        <th class="product-picture">
                                            @T("ShoppingCart.Image")
                                        </th>
                                    }
                                    @if (Model.ShowSku)
                                    {
                                        <th class="sku" data-hide="w410, w480, w580, w768, w980">
                                            @T("ShoppingCart.SKU")
                                        </th>
                                    }


                                    <th class="unit-price" data-hide="w410, w480, w580, w768">
                                        @T("ShoppingCart.UnitPrice")
                                    </th>
                                    <th class="quantity" data-hide="w410, w480, w580, w768">
                                        @T("ShoppingCart.Quantity")
                                    </th>
                                    <th class="subtotal">
                                        @T("ShoppingCart.ItemTotal")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{var counter = 0;}
                                @foreach (var item in Model.Items)
                                {
                                    counter++;
                                    <tr class="cart-item-row">
                                        <td>
                                            <span class="item-count">@counter</span>
                                        </td>
                                        @if (Model.IsEditable)
                                        {
                                        <td class="remove-from-cart">
                                            @if (item.DisableRemoval)
                                            {
                                                <text>&nbsp;</text>
                                                    }
                                                    else
                                                    {
                                                //amsfci
                                                <span  class="remove-item" name="removefromcart"
                                                        data-item-value="@(item.Id)" value="@(item.Id)">
                                                    <span><img src="https://cdn2.iconfinder.com/data/icons/e-business-helper/240/627249-delete3-512.png" width="25" height="25" /></span>
                                                </span>
                                                <input style="display: none" type="checkbox" id="item@(item.Id)" name="removefromcart" value="@(item.Id)" />
                                            }
                                        </td>
                                        }
                                        <td class="product">
                                            <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})" class="product-name">@item.ProductName</a>
                                            @if (!String.IsNullOrEmpty(item.AttributeInfo))
                                            {
                                                <div class="attributes">
                                                    @Html.Raw(item.AttributeInfo)
                                                </div>
                                            }
                                            @if (!String.IsNullOrEmpty(item.RecurringInfo))
                                            {
                                                <div class="recurring-info">
                                                    @Html.Raw(item.RecurringInfo)
                                                </div>
                                            }
                                            @if (!String.IsNullOrEmpty(item.RentalInfo))
                                            {
                                                <div class="rental-info">
                                                    @Html.Raw(item.RentalInfo)
                                                </div>
                                            }
                                            @if (Model.IsEditable && item.AllowItemEditing)
                                            {
                                                var editCartItemUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
                                                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + item.Id, null);
                                                <div class="edit-item">
                                                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                                                </div>
                                            }
                                            @if (item.Warnings.Count > 0)
                                            {
                                                <div class="message-error">
                                                    <ul>
                                                        @foreach (var warning in item.Warnings)
                                                        {
                                                            <li>@warning</li>
                                                        }
                                                    </ul>
                                                </div>
                                            }
                                        </td>


                                        @if (Model.ShowProductImages)
                                        {
                                            <td class="product-picture">
                                                <a href="@Url.RouteUrl("Product", new {SeName = item.ProductSeName})"><img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" /></a>
                                            </td>
                                        }
                                        @if (Model.ShowSku)
                                        {
                                            <td class="sku">
                                                @item.Sku
                                            </td>
                                        }
                                        <td class="unit-price">
                                            <span class="product-unit-price">@item.UnitPrice</span>
                                        </td>
                                        <td class="quantity">
                                            @if (Model.IsEditable)
                                            {
                                                if (item.AllowedQuantities.Count > 0)
                                                {
                                                    <select name="itemquantity@(item.Id)" class="qty-dropdown">
                                                        @foreach (var qty in item.AllowedQuantities)
                                                        {
                                                            <option selected="@qty.Selected" value="@qty.Value">@qty.Value</option>
                                                        }
                                                    </select>
                                                }
                                                else
                                                {
                                                    if (item.Quantity > 20)
                                                    {
                                                        <span class="itemquantity@(item.Id)mmmmm  mmmmm">-</span>
                                                        <input name="itemquantity@(item.Id)" id="itemquantity@(item.Id)input" type="text" value="@(item.Quantity)" class="qty-input" />
                                                        <span class="itemquantity@(item.Id)ppppp ppppp">+</span>
                                                    }
                                                    else
                                                    {
                                                        <select id="itemquantity@(item.Id)" class="qty-dropdown">
                                                            @for (int i = 0; i <= 20; i++)
                                                            {
                                                                if (item.Quantity == i)
                                                                {
                                                                    <option selected value="@i">@i</option>
                                                                }
                                                                else
                                                                {
                                                                    <option value="@i">@i</option>
                                                                }
                                                            }

                                                            <option value="101010">ادخل كميه اخري</option>
                                                        </select>

                                                        <span hidden class="itemquantity@(item.Id)mmmmm mmmmm">-</span>
                                                        <input hidden name="itemquantity@(item.Id)" id="itemquantity@(item.Id)input" type="text" value="@(item.Quantity)" class="qty-input" />
                                                        <span hidden class="itemquantity@(item.Id)ppppp ppppp">+</span>
                                                    }

                                                    @*<script type="text/javascript" src="/Themes/pavilion/Content/scripts/jquery.mobile-1.4.5.min.js" ></script>*@
                                                        <script type="text/javascript" asp-location="Footer">
                                                           

                                                        
                                                        //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                                                        $(document).ready(function() {


                                                            $("#itemquantity@(item.Id)").on('touchstart change', function (event) {
                                                                var s = $(this);
                                                                var selected = s.find(":selected").text();
                                                                var selectedValue = s.find(":selected").val();
                                                                if (selectedValue == 101010) {
                                                                    $("#itemquantity@(item.Id)input").show();
                                                                    $(".itemquantity@(item.Id)mmmmm").show();
                                                                    $(".itemquantity@(item.Id)ppppp").show();
                                                                    s.hide();
                                                                    return false;
                                                                }

                                                                $("#itemquantity@(item.Id)input").val(selected);
                                                                $(".update-cart-button").click();
;

                                                                    return false;

                                                            });

                                                            $(".itemquantity@(item.Id)ppppp").on('touchstart click', function (event) {

                                                                   $("#itemquantity@(item.Id)input").val(
                                                                        parseInt($("#itemquantity@(item.Id)input").val()) + 1); 
                                                                    $(".update-cart-button").click();

                                                                            return false;
                                                            }); 
                                                            $(".itemquantity@(item.Id)mmmmm").on('touchstart click', function (event) {
                                                                  if (parseInt($(".itemquantity@(item.Id)mmmmm").val()) > 0) {
                                                                      $("#itemquantity@(item.Id)input").val(
                                                                          parseInt($("#itemquantity@(item.Id)input").val()) - 1);
                                                                  }
                                                                  $(".update-cart-button").click();
                                                                            return false;
                                                            }); 
                                                        });
                                                        </script>
                                                }
                                            }
                                            else
                                            {
                                                <span>@item.Quantity</span>
                                            }
                                        </td>
                                        <td class="subtotal">
                                            <span class="product-subtotal">@item.SubTotal</span>
                                            @if (!String.IsNullOrEmpty(item.Discount))
                                            {
                                                <div class="discount">
                                                    @T("ShoppingCart.ItemYouSave", item.Discount)
                                                </div>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <style type="text/css">
                        .mmmmm {
                            padding: 6px;
                            background: #b0aaaa;
                            font-size: 20px;
                            float: left;
                            border-radius: 5px 0px 0px 5px;
                            position: relative;
                            right: -7px;
                            top: 0px;
                        }
                        @@media(min-width: 1300px){

                            .mmmmm {
                                padding: 6px;
                                background: #b0aaaa;
                                font-size: 20px;
                                float: left;
                                border-radius: 5px 0px 0px 5px;
                                position: relative;
                                right: 15px;
                                top: 40px;
                            }
                        }
                        .ppppp {
                            padding: 6px;
                            background: #b0aaaa;
                            font-size: 20px;
                            float: right;
                            border-radius: 0px 5px 5px 0px;
                            position: relative;
                            right: -23px;
                            top: -40px;
                        }

                        .remove-item {
                            border: 0px aliceblue solid;
                        }

                        .IncludedInShipping {
                            border: #f86000 1px solid;
                            background: antiquewhite;
                            padding: 20px;
                            border-radius: 5px;
                            font-size: 20px;
                        }
                    </style>
                    <div class="cart-options">
                        @if (Model.IsEditable)
                        {
                            <div class="common-buttons">
                                <input id="tst" type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button" />
                                <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-2 continue-shopping-button" />
                            </div>
                        }
                        @*@if (Model.CheckoutAttributes.Count > 0)
                        {
                            @await Component.InvokeAsync("SelectedCheckoutAttributes")
                        }*@
                    </div>
                    

                    @{
                        double allSubTotal = 0;
                        for (int i = 0; i < Model.Items.Count; i++)
                        {
                            allSubTotal += double.Parse(Model.Items[i].SubTotal.Substring(0, Model.Items[i].SubTotal.Length - 5));
                        }

                    }

                    <div class="IncludedInShipping  " style="width:100%;float:left;margin-bottom:1%;clear:both;font-size: 20px">
                        @if (allSubTotal < 500)
                        {
                            <label style="font-size: 20px; " class="info">@T("Checkout.AddProductsMoreThan")</label>
                        }
                        else
                        {
                            <label style="font-size: 20px; font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif" class="info">@T("Checkout.IncludedInShipping")</label>
                        }
                    </div>




                    @if (Model.IsEditable && Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                    {
                        var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                        //of course, you can modify appropriate locales to include VAT info there
                        <div class="tax-shipping-info">
                            @T(inclTax ? "ShoppingCart.TaxShipping.InclTax" : "ShoppingCart.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </div>
                    }

                    <div class="cart-footer">
                        @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_cart_footer" })
                        @if (Model.IsEditable)
                        {
                            <div class="cart-collaterals">
                                @{
                                    var estimateShipping = (await Component.InvokeAsync("EstimateShipping")).ToHtmlString();
                                }

                                @if (!String.IsNullOrEmpty(estimateShipping))
                                {
                                    <div class="accordion-tab estimate-shipping">
                                        <div class="accordion-tab-title">
                                            <strong>@T("ShoppingCart.EstimateShipping")</strong>
                                        </div>
                                        <div class="accordion-tab-content">
                                            @await Component.InvokeAsync("EstimateShipping")
                                        </div>
                                    </div>
                                }
                                @if (Model.DiscountBox.Display)
                                {
                                    <div class="accordion-tab coupon-codes">
                                        <div class="accordion-tab-title">
                                            <strong>@T("ShoppingCart.DiscountCouponCode")</strong>
                                        </div>
                                        <div class="accordion-tab-content">
                                            @await Html.PartialAsync("_DiscountBox", Model.DiscountBox)
                                        </div>
                                    </div>
                                }
                                @if (Model.GiftCardBox.Display)
                                {
                                    <div class="accordion-tab gift-cards">
                                        <div class="accordion-tab-title">
                                            <strong>@T("ShoppingCart.GiftCardCouponCode")</strong>
                                        </div>
                                        <div class="accordion-tab-content">
                                            @await Html.PartialAsync("_GiftCardBox", Model.GiftCardBox)
                                        </div>
                                    </div>
                                }

                                @await Html.PartialAsync("_CheckoutAttributes", Model)
                                @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_content_deals" })
                            </div>
                                    }

                        <div class="totals">
                            @await Component.InvokeAsync("OrderTotals", new { isEditable = Model.IsEditable })
                            @if (Model.IsEditable)
                            {
                                if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                {
                                    <div class="min-amount-warning">
                                        @Model.MinOrderSubtotalWarning
                                    </div>
                                }
                            }
                            @if (Model.IsEditable)
                            {
                                if (Model.TermsOfServiceOnShoppingCartPage)
                                {
                                    @*<div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
                            <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                        </div>
                        <div class="terms-of-service">
                            <div>
                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                <label for="termsofservice">@T("Checkout.TermsOfService.IAccept")</label>
                                @if (Model.TermsOfServicePopup)
                                {*@
                                    @*<a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>*@
                                    <script>
	                                        @*$(document).ready(function() {
	                                            $('#read-terms').on('click',
	                                                function(e) {
	                                                    e.preventDefault();
	                                                    displayPopupContentFromUrl(
	                                                        '@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})',
	                                                        '@T("Checkout.TermsOfService")');
	                                                });
	                                        });*@
                                    </script>
                                    @*}
                                else
                                {
                                    <a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
                                }
                            </div>
                        </div>*@
                                }
                                <div class="checkout-buttons">
                                    @if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning) && !Model.HideCheckoutButton)
                                    {
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('#checkout').click(function () {
                                                    //terms of service
                                                    var termOfServiceOk = true;
                                                    if ($('#termsofservice').length > 0) {
                                                        //terms of service element exists
                                                        if (!$('#termsofservice').is(':checked')) {
                                                            $("#terms-of-service-warning-box").dialog();
                                                            termOfServiceOk = false;
                                                        } else {
                                                            termOfServiceOk = true;
                                                        }
                                                    }
                                                    return termOfServiceOk;
                                                });
                                                // amsfci tap vclick
                                                $('.remove-item').on('click', function (e) {
                                                    e.preventDefault();
                                                    $('#item' + $(this).attr('data-item-value'))[0].checked = true
                                                   
                                                    $('.update-cart-button').trigger("click");
                                                    //$('.update-cart-button').click();


                                                   
                                                    
                                            
                                                    


                                                    return false;
                                                });
                                            });
                                        </script>
                                        <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                            @T("Checkout.Button")
                                        </button>
                                    }
                                </div>







                                if (Model.ButtonPaymentMethodViewComponentNames.Count > 0)
                                {
                                    <div class="addon-buttons">
                                        @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                        @foreach (var pm in Model.ButtonPaymentMethodViewComponentNames)
                                        {
                                            @await Component.InvokeAsync(pm)
                                        }
                                    </div>
                                }

                            }
                        </div>
                    </div>
                    @if (Model.IsEditable)
                    {
                        @await Component.InvokeAsync("CrossSellProducts")
                    }
                </form>
        }
        else
        {
            <div class="no-data">
                @T("ShoppingCart.CartIsEmpty")
            </div>
        }

        @await Component.InvokeAsync("Widget", new { widgetZone = "order_summary_content_after" })
    </div>
</div>
